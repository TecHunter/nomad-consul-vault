- name: Install Nomad
  include_role:
    name: install-hashi
  vars:
    name: nomad

- name: Enable Nomad user lingering
  shell: loginctl enable-linger hashi

- name: Create podman userspace config
  file:
    path: "~/.config/containers"
    state: directory
  become: yes
  become_user: "{{user}}"

- name: Copy podman containers.conf
  become: true
  become_user: "{{user}}"
  copy:
    src: "containers.conf"
    dest: "~/.config/containers"

- name: Copy podman service files for socket activation
  copy:
    src: "{{ item }}"
    dest: "/usr/lib/systemd/user/"
  with_items:
    - podman.service
    - podman.socket

- name: Register systemd socket activation
  become: yes
  become_user: "{{ user }}"
  systemd:
    name: "{{ item }}"
    enabled: true
    state: restarted
    daemon_reload: true
    scope: user
  with_items:
    - podman.socket
    - podman.service
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{uid}}"
    DBUS_SESSION_BUS_ADDRESS: "unix:path=/run/user/{{uid}}/bus"

- name: Add a default remote connection for nomad socket
  shell: podman-remote system connection add default /run/user/990/podman/podman.sock

- name: Allow nomad port
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  with_items: "{{ nomad.port_list }}"

- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tmpdir
- name: building podman driver
  git:
    repo: https://github.com/hashicorp/nomad-driver-podman.git
    dest: "{{ tmpdir.path }}"

- name: Install build requirements
  package:
    name:
      - golang
    state: latest

- name: Build podman nomad driver
  shell: ./build.sh
  args:
    chdir: "{{ tmpdir.path }}"

- name: Ensure plugins directory exists and has proper ownership
  file:
    path: "{{ datadirs.nomad }}/nomad/plugins"
    state: directory
    owner: "{{uid}}"
    group: "{{uid}}"
    follow: false

- name: copy driver to nomad plugins dir
  copy:
    src: "{{ tmpdir.path }}/nomad-driver-podman"
    dest: "{{  datadirs.nomad | default(datadir) }}/nomad/plugins"
    remote_src: true
    owner: "{{gid}}"
    group: "{{uid}}"
    mode: "u+rwx"

- name: Remove temp folder
  file:
    path: "{{ tmpdir.path }}"
    state: absent
  when: tmpdir.path is defined

- name: Add subids to system files
  lineinfile:
    dest: "/etc/{{ item }}"
    regexp: "^{{user}}:(\\d+):(\\d+)$"
    line: "{{user}}:100000:65536"
    create: true
    state: present
  with_items:
  - subuid
  - subgid
  notify:
  - nomad config changed

- name: Flush all handlers for config files
  meta: flush_handlers

- name: Ensure {{item}} is in a running state
  service:
    name: "{{ item }}"
    state: started
  register: serviceDetails
  until: serviceDetails.status.ActiveState == "active"
  retries: 15
  delay: 20
  with_items:
  - consul
  - vault
  - nomad