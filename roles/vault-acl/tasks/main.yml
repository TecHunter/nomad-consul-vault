---
- name: Ensure vault is in a running state
  service:
    name: vault
    state: started
  register: vaultServiceDetails
  until: vaultServiceDetails.status.ActiveState == "active"
  retries: 15
  delay: 20

- name: "Create Policy nomad-server policy"
  include_tasks: ./write-policy.yml
  vars:
    policy_name: "{{item}}"
  with_items:
  - nomad-server
  - torrent-api
  - traefik
  - plex
  - issue-techunter-io

- name: "Create Role for nomad-server policy"
  shell:
    cmd: "vault read /auth/token/roles/nomad-cluster"
  register: res
  environment:
    VAULT_TOKEN: "{{ vault_root_token }}"
    VAULT_ADDR: "http://127.0.0.1:{{ vault.ports.http}}"
  failed_when: "'local node not active but active cluster node not found' in res.stderr"

- name: "Write role nomad-cluster"
  shell:
    cmd: "vault write /auth/token/roles/nomad-cluster disallowed_policies='nomad-server' token_explicit_max_ttl=0 name='nomad-cluster' orphan=true token_period=259200 renewable=true"
  environment:
    VAULT_TOKEN: "{{ vault_root_token }}"
    VAULT_ADDR: "http://127.0.0.1:{{ vault.ports.http}}"
  when: res.rc != 0

- name: Read or create keys
  include_role:
    name: read-or-get-key
  vars:
    key_name: "{{ item.name }}"
    cmd: "{{ item.getter }}"
  with_items:
    - { name: vault_nomad_token, getter: "VAULT_TOKEN={{vault_root_token}} vault token create -policy nomad-server -period 72h -orphan -address=http://127.0.0.1:{{ vault.ports.http}} -format=json | jq -r '.auth.client_token'" }
    - { name: vault_traefik_token, getter: "VAULT_TOKEN={{vault_root_token}} vault token create -policy traefik -policy pki_manager -period 72h -orphan -address=http://127.0.0.1:{{ vault.ports.http}} -format=json | jq -r '.auth.client_token'" }