- name: Ensure Vault is in a running state
  service:
    name: vault
    state: started
  register: vaultServiceDetails
  until: vaultServiceDetails.status.ActiveState == "active"
  retries: 15
  delay: 20

- name: Initialize Vault
  command: "vault operator init -key-shares=5 -key-threshold=3 -format json"
  environment:
    VAULT_ADDR: "http://127.0.0.1:{{ vault.ports.http}}"
  register: vault_init_results
  when: vault_root_token is not defined

### Only do the rest if we just init the vault
- set_fact:
    vault_root_token: "{{ vault_init_parsed.root_token }}"
  when: vault_init_results is defined

- set_fact:
    "{{ 'vault_unseal_key_' + (index|string) }}": "{{ item }}"
  loop: "{{ vault_init_results.stdout | from_json | json_query('unseal_keys_hex') | flatten(levels=1) }}"
  loop_control:
    index_var: index
  when: vault_init_results is defined

- name: Save root key to secrets
  lineinfile:
    dest: "{{ playbook_dir }}/.secrets.yml"
    line: "vault_root_token: \"{{ item }}\""
    regexp: "^vault_root_token: .*$"
    create: true
    state: present
  delegate_to: localhost
  become: no
  when: vault_init_results is defined

- name: Save unseal keys to secrets
  lineinfile:
    dest: "{{ playbook_dir }}/.secrets.yml"
    line: "{{ 'vault_unseal_key_' + (index|string) }}: \"{{ item }}\""
    regexp: "^{{ 'vault_unseal_key_' + (index|string) }}:.*$"
    create: true
    state: present
  delegate_to: localhost
  become: no
  loop: "{{ vault_init_results.stdout | from_json | json_query('unseal_keys_hex') | flatten(levels=1) }}"
  loop_control:
    index_var: index
  when: vault_init_results is defined
